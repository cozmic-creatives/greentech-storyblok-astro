---
import { 
  buildOptimizedUrl, 
  generateSrcset, 
  isStoryblokUrl,
  DEFAULT_RESPONSIVE_WIDTHS,
  DEFAULT_SIZES,
  type ImageOptimizationOptions 
} from '~/utils/image';

export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  widths?: number[];
  sizes?: string;
  quality?: number;
  format?: 'webp' | 'auto';
  loading?: 'lazy' | 'eager';
  class?: string;
  [key: string]: any;
}

const {
  src,
  alt,
  width,
  height,
  widths,
  sizes,
  quality = 80,
  format = 'webp',
  loading = 'lazy',
  class: className,
  ...rest
} = Astro.props;

// Determine responsive image configuration
const isStoryblokImage = isStoryblokUrl(src);
const shouldUseDefaultResponsive = isStoryblokImage && !widths && !width && !height;
const responsiveWidths = widths || (shouldUseDefaultResponsive ? [...DEFAULT_RESPONSIVE_WIDTHS] : []);
const shouldUseResponsive = responsiveWidths && responsiveWidths.length > 0;

// Generate optimized URLs using shared utilities
const optimizationOptions: ImageOptimizationOptions = { quality, format, width, height };
const optimizedSrc = buildOptimizedUrl(src, optimizationOptions);
const srcsetValue = shouldUseResponsive ? generateSrcset(src, responsiveWidths, optimizationOptions) : undefined;
const sizesValue = shouldUseResponsive ? (sizes || DEFAULT_SIZES) : undefined;
---

<img
  src={optimizedSrc}
  alt={alt}
  loading={loading}
  class={className}
  srcset={srcsetValue}
  sizes={sizesValue}
  {...rest}
/>