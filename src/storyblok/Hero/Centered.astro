---
import { storyblokEditable } from '@storyblok/astro';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';
import Text from '~/storyblok/Text.astro';
import { cn } from '~/lib/utils';
import { Image } from 'astro:assets';

const { blok } = Astro.props;
const { variant, heroClasses, sectionClasses, blocks, images } = blok;

const listItems = blocks.filter(block => block.component === 'list');
const buttonItems = blocks.filter(block => block.component === 'button');
const badgeItems = blocks.filter(block => block.component === 'badge');
---

<section
  id="parallax-hero-centered"
  {...storyblokEditable(blok)}
  class={cn(sectionClasses, 'relative bg-cover bg-center m-4 rounded-3xl overflow-hidden')}
  style={`background-image: url(${images?.[0]?.filename || ''}); background-position: center center; transition: background-position 0.15s ease-out;`}
>
  <div class="absolute inset-0 bg-gradient-to-b from-black/30 to-black/90"></div>

  <div class="container relative z-10">
    <div
      class="flex flex-col gap-4 md:gap-6 lg:gap-8 items-center text-center max-w-4xl mx-auto dark"
    >
      {badgeItems?.map(badge => <StoryblokComponent blok={badge} />)}

      <Text
        blok={{
          text: blok.headline,
          textClasses:
            'prose prose-invert prose-sm lg:prose-lg prose-headings:m-0 prose-p:m-0 text-center',
        }}
      />

      {listItems?.map(item => <StoryblokComponent blok={item} />)}

      {
        buttonItems?.length > 0 && (
          <div class="flex gap-3 flex-wrap justify-center">
            {buttonItems?.map(button => (
              <StoryblokComponent blok={button} />
            ))}
          </div>
        )
      }
    </div>
  </div>
</section>
