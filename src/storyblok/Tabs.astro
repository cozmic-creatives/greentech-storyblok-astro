---
import { storyblokEditable } from '@storyblok/astro';
import TabItem from './TabItem.astro';
import { TabsWrapper } from '../components/TabsWrapper';
import { AccordionWrapper } from '../components/AccordionWrapper';
import { cn } from '../lib/utils';
import { processContentItems, createItemContentMap } from '../utils/astro';

const { blok } = Astro.props;
const { tabItems = [], tabClasses, label, accordionOnMobile } = blok;

// Process tabs to separate server and client rendering
const { processedItems: processedTabItems, unprocessedItems: unprocessedTabItems } =
  processContentItems(tabItems);

// Create a map of tab UIDs to their content using the TabItem component
const tabContentMap = await createItemContentMap(TabItem, processedTabItems);
---

<TabsWrapper
  editableAttributes={storyblokEditable(blok)}
  tabItems={tabItems}
  label={label}
  tabClasses={cn('w-full', tabClasses, accordionOnMobile ? 'hidden md:flex' : '')}
  tabContentMap={tabContentMap}
  unprocessedTabItems={unprocessedTabItems}
  client:idle
/>

{
  accordionOnMobile && (
    <AccordionWrapper
      {...storyblokEditable(blok)}
      tabItems={tabItems}
      label={label}
      accordionClasses={cn('w-full md:hidden', tabClasses)}
      tabContentMap={tabContentMap}
      unprocessedTabItems={unprocessedTabItems}
      client:idle
    />
  )
}
